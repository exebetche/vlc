LUA: use _wfopen instead of fopen to open file on Windows
diff -ru lua-5.1/src/liolib.c lua/src/liolib.c
--- lua-5.1/src/liolib.c	2008-01-18 18:47:43.000000000 +0100
+++ lua/src/liolib.c	2013-08-11 16:04:50.171631414 +0200
@@ -26,6 +26,27 @@
 
 static const char *const fnames[] = {"input", "output"};
 
+#include <windows.h>
+
+static FILE *w_fopen(const char *filename, const char *mode) {
+    // convert from utf8
+    int cchWideFileName = 0;
+    wchar_t* pszWideFileName = NULL;
+    int cchWideMode = 0;
+    wchar_t* pszWideMode = NULL;
+    FILE* f = NULL;
+    cchWideFileName = MultiByteToWideChar(CP_UTF8, 0, filename, -1, NULL, 0);
+    pszWideFileName = (wchar_t*)malloc(sizeof(wchar_t)*(cchWideFileName+1));
+    MultiByteToWideChar(CP_UTF8, 0, filename, -1, pszWideFileName, cchWideFileName + 1);
+    cchWideMode = MultiByteToWideChar(CP_UTF8, 0, mode, -1, NULL, 0);
+    pszWideMode = (wchar_t*)malloc(sizeof(wchar_t)*(cchWideMode+1));
+    MultiByteToWideChar(CP_UTF8, 0, mode, -1, pszWideMode, cchWideMode + 1);
+    f = _wfopen(pszWideFileName, pszWideMode);
+    free(pszWideFileName);
+    free(pszWideMode);
+    if ( f == NULL ) f = fopen( filename, mode );
+    return f;
+}
 
 static int pushresult (lua_State *L, int i, const char *filename) {
   int en = errno;  /* calls to Lua API may change this value */
@@ -162,7 +183,7 @@
   const char *filename = luaL_checkstring(L, 1);
   const char *mode = luaL_optstring(L, 2, "r");
   FILE **pf = newfile(L);
-  *pf = fopen(filename, mode);
+  *pf = w_fopen(filename, mode);
   return (*pf == NULL) ? pushresult(L, 0, filename) : 1;
 }
 
@@ -202,7 +223,7 @@
     const char *filename = lua_tostring(L, 1);
     if (filename) {
       FILE **pf = newfile(L);
-      *pf = fopen(filename, mode);
+      *pf = w_fopen(filename, mode);
       if (*pf == NULL)
         fileerror(L, 1, filename);
     }
@@ -254,7 +275,7 @@
   else {
     const char *filename = luaL_checkstring(L, 1);
     FILE **pf = newfile(L);
-    *pf = fopen(filename, "r");
+    *pf = w_fopen(filename, "r");
     if (*pf == NULL)
       fileerror(L, 1, filename);
     aux_lines(L, lua_gettop(L), 1);
